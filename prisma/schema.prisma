// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("LOCAL_DB")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  files     File[]
  folders   Folder[]

  @@map("user")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text // MediumText may be needed for MySql
  expiresAt DateTime

  @@map("session")
}

model File {
  id          String   @id @default(cuid())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  ownership   User     @relation(fields: [ownershipId], references: [id]) // pk: user(homepage), fk: files
  ownershipId Int
  folder      Folder?  @relation(fields: [folderId], references: [id]) // pk: folder, fk: childFiles
  folderId    String?

  @@map("file")
}

model Folder {
  id          String @id @default(cuid())
  name        String @default("New Folder") @db.VarChar(50)
  ownership   User   @relation(fields: [ownershipId], references: [id]) // pk: user (homepage), fk: folder
  ownershipId Int
  files       File[] //children files

  parentId String?
  parent   Folder?  @relation("ParentChildren", fields: [parentId], references: [id]) // pk: folder, fk: folder; need to add a name to distinguish 
  children Folder[] @relation("ParentChildren")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("folder")
}
